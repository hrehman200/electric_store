<?php

/*
 * Generated by CRUDigniter v3.2 
 * www.crudigniter.com
 */

class Color_category_map_model extends CI_Model
{
    function __construct() {
        parent::__construct();
    }

    /*
     * Get color_category_map by 
     */
    function get_color_category_map($color_id, $category_id) {
        return $this->db->get_where('color_category_map', array(
            'color_id' => $color_id,
            'category_id' => $category_id
        ))->row_array();
    }

    /**
     * @param $category_id
     * @return mixed
     */
    function get_all_color_category_map($category_id = null) {

        $this->db->select('color_category_map.*, categories.name AS category, colors.name AS color', false)
            ->join('categories', 'color_category_map.category_id = categories.id', 'INNER')
            ->join('colors', 'color_category_map.color_id = colors.id', 'INNER');

        if($category_id != null) {
            $this->db->where('category_id', $category_id);
        }

        $result = $this->db->order_by('colors.name', 'asc')
            ->get('color_category_map')->result_array();

        return $result;
    }

    /*
     * function to add new color_category_map
     */
    function add_color_category_map($params) {
        $this->db->insert('color_category_map', $params);
        return $this->db->insert_id();
    }

    /*
     * function to delete color_category_map
     */
    function delete_color_category_map($color_id, $category_id) {
        return $this->db->delete('color_category_map', array(
            'color_id' => $color_id,
            'category_id' => $category_id
        ));
    }
}
