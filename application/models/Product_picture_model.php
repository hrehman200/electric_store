<?php

/*
 * Generated by CRUDigniter v3.2 
 * www.crudigniter.com
 */

class Product_picture_model extends CI_Model
{
    const PICTURE_TYPES = [
        'profile_pic' => 1,
        'open_pic' => 2,
        'display_pic' => 3,
        'measurement_tracking_pic' => 4,
        'power_src_pic' => 5,
        'damage_pic' => 6,
        'missing_pieces_pic' => 7,
        'descriptive_pic' => 8,
        'model_serial_no_pic' => 9
    ];

    const PUBLICLY_VIEWABLE_PIC_TYPES = [1, 2, 3];

    function __construct() {
        parent::__construct();
    }

    /*
     * Get product_picture by id
     */
    function get_product_picture($id) {
        return $this->db->get_where('product_pictures', array('id' => $id))->row_array();
    }

    /**
     * @param $product_id
     * @param null|int|string $type
     * @return mixed
     */
    function get_all_product_pictures($product_id, $type = null) {
        $this->db->where('product_id', $product_id);
        if($type != null) {
            if(!is_int($type)) {
                $type = self::PICTURE_TYPES[$type];
            }
            $this ->db->where('type', $type);
        }
        $this->db->order_by('id', 'desc');
        $pictures = $this->db->get('product_pictures')->result_array();

        $result = [];
        foreach($pictures as $pic) {
            $key = array_search ($pic['type'], self::PICTURE_TYPES);
            $result[$key][] = $pic;
        }

        return $result;
    }

    /**
     * @param $product_id
     * @return mixed
     */
    function get_public_picture_urls($product_id) {
        $pictures = $this->db->select(sprintf('CONCAT("%suploads/", name) AS url', base_url()), false)
            ->where('product_id', $product_id)
            ->where_in('type', self::PUBLICLY_VIEWABLE_PIC_TYPES)
            ->order_by('type', 'asc')
            ->get('product_pictures')
            ->result_array();

        return $pictures;
    }

    /**
     * @param $product
     * @param $type_key_name
     * @return string
     */
    function get_picture_html_from_product_data($product, $type_key_name) {
        $html = '';
        foreach($product['pictures'][$type_key_name] as $pic) {
            $img = base_url().'uploads/'.$pic['name'];
            $html .= sprintf('<div class="product-pic">
                <a href="%s" data-toggle="lightbox"><img src="%s" width="250"></a>
                <div class="edit" data-id="%d"><a href="javascript:;"><i class="fa fa-times fa-lg fa-2x"></i></a></div>
            </div>', $img, $img, $pic['id']);
        }
        return $html;
    }

    /*
     * function to add new product_picture
     */
    function add_product_picture($params) {
        $this->db->insert('product_pictures', $params);
        return $this->db->insert_id();
    }

    /*
     * function to update product_picture
     */
    function update_product_picture($id, $params) {
        $this->db->where('id', $id);
        return $this->db->update('product_pictures', $params);
    }

    /*
     * function to delete product_picture
     */
    function delete_product_picture($id) {
        return $this->db->delete('product_pictures', array('id' => $id));
    }

    /**
     * @param $product_id
     * @param $arr_pics
     */
    function save_pictures($product_id, $arr_pics) {
        foreach($arr_pics as $type => $file_names) {
            foreach($file_names as $name) {
                $this->db->insert('product_pictures', [
                    'product_id' => $product_id,
                    'type' => $type,
                    'name' => $name,
                ]);
            }
        }
    }
}
