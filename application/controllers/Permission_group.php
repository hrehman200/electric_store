<?php
/* 
 * Generated by CRUDigniter v3.2 
 * www.crudigniter.com
 */
 
class Permission_group extends CI_Controller{
    function __construct()
    {
        parent::__construct();
        $this->load->model('Permission_group_model');
    } 

    /*
     * Listing of permission_groups
     */
    function index()
    {
        $data['permission_groups'] = $this->Permission_group_model->get_all_permission_groups();
        
        $data['_view'] = 'permission_group/index';
        $this->load->view('layouts/main',$data);
    }

    /*
     * Adding a new permission_group
     */
    function add()
    {   
        $this->load->library('form_validation');

		$this->form_validation->set_rules('name','Name','is_unique[name]');
		
		if($this->form_validation->run())     
        {   
            $params = array(
				'name' => $this->input->post('name'),
            );
            
            $permission_group_id = $this->Permission_group_model->add_permission_group($params);
            redirect('permission_group/index');
        }
        else
        {            
            $data['_view'] = 'permission_group/add';
            $this->load->view('layouts/main',$data);
        }
    }  

    /*
     * Editing a permission_group
     */
    function edit($id)
    {   
        // check if the permission_group exists before trying to edit it
        $data['permission_group'] = $this->Permission_group_model->get_permission_group($id);
        
        if(isset($data['permission_group']['id']))
        {
            $this->load->library('form_validation');

			$this->form_validation->set_rules('name','Name','is_unique[name]');
		
			if($this->form_validation->run())     
            {   
                $params = array(
					'name' => $this->input->post('name'),
                );

                $this->Permission_group_model->update_permission_group($id,$params);            
                redirect('permission_group/index');
            }
            else
            {
                $data['_view'] = 'permission_group/edit';
                $this->load->view('layouts/main',$data);
            }
        }
        else
            show_error('The permission_group you are trying to edit does not exist.');
    } 

    /*
     * Deleting permission_group
     */
    function remove($id)
    {
        $permission_group = $this->Permission_group_model->get_permission_group($id);

        // check if the permission_group exists before trying to delete it
        if(isset($permission_group['id']))
        {
            $this->Permission_group_model->delete_permission_group($id);
            redirect('permission_group/index');
        }
        else
            show_error('The permission_group you are trying to delete does not exist.');
    }
    
}
