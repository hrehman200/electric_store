<?php

/*
 * Generated by CRUDigniter v3.2 
 * www.crudigniter.com
 */
require_once __DIR__.'/Auth_Controller.php';

class Permission_map extends Auth_Controller
{
    function __construct() {
        parent::__construct();
        $this->load->model('Permission_map_model');
        $this->load->model('Permission_model');
        $this->load->model('Permission_group_model');
    }

    /*
     * Listing of permission_map
     */
    function index() {
        $data['permission_map'] = $this->Permission_map_model->get_all_permission_map();

        $data['_view'] = 'permission_map/index';
        $this->load->view('layouts/main', $data);
    }

    /*
     * Adding a new permission_map
     */
    function add() {
        if (isset($_POST) && count($_POST) > 0) {
            $params = $_POST;

            $permission_map_id = $this->Permission_map_model->add_permission_map($params);
            redirect('permission_map/index');
        } else {
            $data['permissions'] = $this->Permission_model->get_all_permissions();
            $data['permission_groups'] = $this->Permission_group_model->get_all_permission_groups();
            $data['_view'] = 'permission_map/add';
            $this->load->view('layouts/main', $data);
        }
    }

    /*
     * Editing a permission_map
     */
    function edit($groupID) {
        // check if the permission_map exists before trying to edit it
        $data['permission_map'] = $this->Permission_map_model->get_permission_map($groupID);

        if (isset($data['permission_map']['groupID'])) {
            if (isset($_POST) && count($_POST) > 0) {
                $params = array();

                $this->Permission_map_model->update_permission_map($groupID, $params);
                redirect('permission_map/index');
            } else {
                $data['_view'] = 'permission_map/edit';
                $this->load->view('layouts/main', $data);
            }
        } else
            show_error('The permission_map you are trying to edit does not exist.');
    }

    /*
     * Deleting permission_map
     */
    function remove($groupID) {
        $permission_map = $this->Permission_map_model->get_permission_map($groupID);

        // check if the permission_map exists before trying to delete it
        if (isset($permission_map['groupID'])) {
            $this->Permission_map_model->delete_permission_map($groupID);
            redirect('permission_map/index');
        } else
            show_error('The permission_map you are trying to delete does not exist.');
    }

}
