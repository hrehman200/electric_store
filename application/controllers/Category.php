<?php

/*
 * Generated by CRUDigniter v3.2 
 * www.crudigniter.com
 */
require_once __DIR__.'/Auth_Controller.php';

class Category extends Auth_Controller
{
    function __construct() {
        parent::__construct();
        $this->load->model('Category_model');
    }

    /*
     * Listing of categories
     */
    function index() {
        $data['categories'] = $this->Category_model->get_all_categories();

        $data['_view'] = 'category/index';
        $this->load->view('layouts/main', $data);
    }

    /*
     * Adding a new category
     */
    function add() {
        $this->load->library('form_validation');

        $this->form_validation->set_rules('name', 'Name', 'callback_check_name|alpha_numeric_spaces');

        if ($this->form_validation->run()) {
            $params = array(
                'name' => $this->input->post('name'),
                'product_title_format' => $this->input->post('product_title_format'),
            );

            if(!empty($this->input->post('parent_id'))) {
                $params['parent_id'] = $this->input->post('parent_id');
            }

            $category_id = $this->Category_model->add_category($params);
            redirect('category/index');
        } else {
            $data['all_categories'] = $this->Category_model->get_categories_dropdown_html();

            $data['_view'] = 'category/add';
            $this->load->view('layouts/main', $data);
        }
    }

    /*
     * Editing a category
     */
    function edit($id) {
        // check if the category exists before trying to edit it
        $data['category'] = $this->Category_model->get_category($id);

        if (isset($data['category']['id'])) {
            $this->load->library('form_validation');

            $this->form_validation->set_rules('name', 'Name', 'callback_check_name|alpha_numeric_spaces');

            if ($this->form_validation->run()) {
                $params = array(
                    'parent_id' => $this->input->post('parent_id'),
                    'name' => $this->input->post('name'),
                    'product_title_format' => $this->input->post('product_title_format'),
                );

                $this->Category_model->update_category($id, $params);
                redirect('category/index');
            } else {
                $data['all_categories'] = $this->Category_model->get_all_categories();

                $data['_view'] = 'category/edit';
                $this->load->view('layouts/main', $data);
            }
        } else
            show_error('The category you are trying to edit does not exist.');
    }

    /*
     * Deleting category
     */
    function remove($id) {
        $category = $this->Category_model->get_category($id);

        // check if the category exists before trying to delete it
        if (isset($category['id'])) {
            $this->Category_model->delete_category($id);
            redirect('category/index');
        } else
            show_error('The category you are trying to delete does not exist.');
    }

    /**
     * @return bool
     */
    function check_name() {

        $id = $this->input->post('id');
        $parent_id = $this->input->post('parent_id');
        $name = $this->input->post('name');

        $this->db->where('parent_id', $parent_id);
        $this->db->where('name', $name);
        if ($id) {
            $this->db->where_not_in('id', $id);
        }

        $exists = $this->db->get('categories')->num_rows() > 0;
        return !$exists;
    }
}
