<?php
/* 
 * Generated by CRUDigniter v3.2 
 * www.crudigniter.com
 */
require_once __DIR__.'/Auth_Controller.php';

class Color_category_map extends Auth_Controller {
    function __construct()
    {
        parent::__construct();
        $this->load->model('Color_category_map_model');
    } 

    /*
     * Listing of color_category_map
     */
    function index()
    {
        $data['color_category_map'] = $this->Color_category_map_model->get_all_color_category_map();
        
        $data['_view'] = 'color_category_map/index';
        $this->load->view('layouts/main',$data);
    }

    /*
     * Adding a new color_category_map
     */
    function add()
    {   
        if(isset($_POST) && count($_POST) > 0)     
        {   
            $params = array(
				'default' => $this->input->post('default'),
				'category_id' => $this->input->post('category_id'),
				'color_id' => $this->input->post('color_id'),
            );
            
            $color_category_map_id = $this->Color_category_map_model->add_color_category_map($params);
            redirect('color_category_map/index');
        }
        else
        {
			$this->load->model('Category_model');
			$data['all_categories'] = $this->Category_model->get_all_categories();

			$this->load->model('Color_model');
			$data['all_colors'] = $this->Color_model->get_all_colors();
            
            $data['_view'] = 'color_category_map/add';
            $this->load->view('layouts/main',$data);
        }
    }  

    /*
     * Editing a color_category_map
     */
    function edit($id)
    {   
        // check if the color_category_map exists before trying to edit it
        $data['color_category_map'] = $this->Color_category_map_model->get_color_category_map($id);
        
        if(isset($data['color_category_map']['']))
        {
            if(isset($_POST) && count($_POST) > 0)     
            {   
                $params = array(
					'default' => $this->input->post('default'),
					'category_id' => $this->input->post('category_id'),
					'color_id' => $this->input->post('color_id'),
                );

                $this->Color_category_map_model->update_color_category_map($id,$params);
                redirect('color_category_map/index');
            }
            else
            {
				$this->load->model('Category_model');
				$data['all_categories'] = $this->Category_model->get_all_categories();

				$this->load->model('Color_model');
				$data['all_colors'] = $this->Color_model->get_all_colors();

                $data['_view'] = 'color_category_map/edit';
                $this->load->view('layouts/main',$data);
            }
        }
        else
            show_error('The color_category_map you are trying to edit does not exist.');
    } 

    /*
     * Deleting color_category_map
     */
    function remove($id)
    {
        $color_category_map = $this->Color_category_map_model->get_color_category_map($id);

        // check if the color_category_map exists before trying to delete it
        if(isset($color_category_map['']))
        {
            $this->Color_category_map_model->delete_color_category_map($id);
            redirect('color_category_map/index');
        }
        else
            show_error('The color_category_map you are trying to delete does not exist.');
    }
    
}
